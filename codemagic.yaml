workflows:
  unity-android-workflow:
    name: Unity Android Workflow
    max_build_duration: 120
    environment:
      groups:
        - unity # <-- (Includes UNITY_SERIAL, UNITY_USERNAME, UNITY_PASSWORD)
        - keystore_credentials # <-- (Includes FCI_KEYSTORE, FCI_KEYSTORE_PASSWORD, FCI_KEY_PASSWORD, FCI_KEY_ALIAS)
        - oculus # <-- (Includes OCULUS_APP_ID, OCULUS_APP_SECRET)
      vars:
        UNITY_BIN: $UNITY_HOME/Contents/MacOS/Unity
        PACKAGE_NAME: "com.minapecheux.Icopop"
        OCULUS_RELEASE_CHANNEL: ALPHA # must be a test channel, can't be "store" (= Production)
    scripts:
      - name: Activate Unity License
        script: | 
          $UNITY_BIN -batchmode -quit -logFile -serial ${UNITY_SERIAL?} -username ${UNITY_USERNAME?} -password ${UNITY_PASSWORD?}      
      - name: Set up keystore
        script: | 
          echo $FCI_KEYSTORE | base64 --decode > $FCI_BUILD_DIR/keystore.keystore
      - name: Set build number + Build Unity app
        script: | 
          export NEW_BUILD_NUMBER=$BUILD_NUMBER
          $UNITY_BIN -batchmode -quit -logFile -projectPath . -executeMethod BuildScript.BuildAndroid -nographics -buildTarget Android
    artifacts:
      - android/*.apk
    publishing:
      scripts:
        - name: Deactivate License
          script: $UNITY_BIN -batchmode -quit -returnlicense -nographics
        - name: Install Oculus CLI tools
          script: |
            wget -O ovr-platform-util "https://www.oculus.com/download_app/?id=1462426033810370&access_token=OC%7C1462426033810370%7C"
            chmod +x ./ovr-platform-util
        - name: Publish app on a Oculus test release channel
          script: |
            ./ovr-platform-util upload-quest-build --app_id $OCULUS_APP_ID  --app_secret $OCULUS_APP_SECRET --apk android/android.apk --channel $OCULUS_RELEASE_CHANNEL
